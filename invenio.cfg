"""
InvenioRDM settings for Zenodo project.

This file was automatically generated by 'invenio-cli init'.

For the full list of settings and their values, see
https://invenio-app-rdm.readthedocs.io/en/latest/configuration.html
and the config.py files of your installed modules
https://invenio.readthedocs.io/en/latest/general/bundles.html

Only configuration created via cookiecutter or very likely to be edited
by installer are included here.
"""

from invenio_i18n import lazy_gettext as _
from invenio_oauthclient.contrib.openaire_aai import REMOTE_SANDBOX_APP
from invenio_oauthclient.contrib.orcid import ORCIDOAuthSettingsHelper
from invenio_oauthclient.contrib import github
from invenio_records_resources.services.records.queryparser import (
    QueryParser,
    SearchFieldTransformer,
)
from invenio_oauthclient.views.client import auto_redirect_login

from zenodo_rdm.custom_fields import CUSTOM_FIELDS_UI, CUSTOM_FIELDS, NAMESPACES



# Flask
# =====
# See https://flask.palletsprojects.com/en/1.1.x/config/

SECRET_KEY="CHANGE_ME"
# Since HAProxy and Nginx route all requests no matter the host header
# provided, the allowed hosts variable is set to localhost. In production it
# should be set to the correct host and it is strongly recommended to only
# route correct hosts to the application.
APP_ALLOWED_HOSTS = ['0.0.0.0', 'localhost', '127.0.0.1']


# Flask-SQLAlchemy
# ================
# See https://flask-sqlalchemy.palletsprojects.com/en/2.x/config/

SQLALCHEMY_DATABASE_URI="postgresql+psycopg2://zenodo:zenodo@localhost/zenodo"


# Invenio-App
# ===========
# See https://invenio-app.readthedocs.io/en/latest/configuration.html

APP_DEFAULT_SECURE_HEADERS = {
    'content_security_policy': {
        'default-src': [
            "'self'",
            'fonts.googleapis.com',  # for fonts
            '*.gstatic.com',    # for fonts
            'data:', # for fonts
            "'unsafe-inline'",  # for inline scripts and styles
            "'unsafe-eval'", # for webpack build
            "blob:",            # for pdf preview
            "zenodo-broker-qa.web.cern.ch"
            # Add your own policies here (e.g. analytics)
        ],
    },
    'content_security_policy_report_only': False,
    'content_security_policy_report_uri': None,
    'force_file_save': False,
    'force_https': True,
    'force_https_permanent': False,
    'frame_options': 'sameorigin',
    'frame_options_allow_from': None,
    'session_cookie_http_only': True,
    'session_cookie_secure': True,
    'strict_transport_security': True,
    'strict_transport_security_include_subdomains': True,
    'strict_transport_security_max_age': 31556926,  # One year in seconds
    'strict_transport_security_preload': False,
}


# Flask-Babel
# ===========
# See https://flask-babel.tkte.ch/#configuration

# Default locale (language)
BABEL_DEFAULT_LOCALE = 'en'
# Default time zone
BABEL_DEFAULT_TIMEZONE = 'Europe/Zurich'


# Invenio-I18N
# ============
# See https://invenio-i18n.readthedocs.io/en/latest/configuration.html

BABEL_DEFAULT_LOCALE = 'en'
# Other supported languages (do not include BABEL_DEFAULT_LOCALE in list).
I18N_LANGUAGES = [
    ('tr', _('Turkish')),
]


# Invenio-Theme
# =============
# See https://invenio-theme.readthedocs.io/en/latest/configuration.html

# Frontpage title
THEME_FRONTPAGE_TITLE = "Zenodo"
# Header logo
THEME_LOGO = 'images/invenio-rdm.svg'
THEME_SITENAME = 'Zenodo'
# Templates
THEME_HEADER_TEMPLATE = 'zenodo_rdm/header.html'
THEME_FRONTPAGE_TEMPLATE = 'zenodo_rdm/frontpage.html'
THEME_FOOTER_TEMPLATE = 'zenodo_rdm/footer.html'

# Invenio-App-RDM
# ===============
# See https://invenio-app-rdm.readthedocs.io/en/latest/configuration.html

# Instance's theme entrypoint file. Path relative to the ``assets/`` folder.
INSTANCE_THEME_FILE = './less/theme.less'

# For invenio-vocabularies
JSONSCHEMAS_HOST = "localhost"


# Invenio-RDM-Records
# ===================
# See https://github.com/inveniosoftware/invenio-rdm-records/blob/master/invenio_rdm_records/config.py

DATACITE_ENABLED = True
DATACITE_PREFIX = "10.5281"
DATACITE_TEST_MODE = True
OAISERVER_ID_PREFIX = "zenodo-rdm.web.cern.ch"

# Invenio-Search
# ==============
SEARCH_INDEX_PREFIX = "zenodo-"

ZENODO_LEGACY_SEARCH_MAP = {
    "resource_type.subtype": "metadata.resource_type.props.subtype",
    "resource_type.type": "metadata.resource_type.props.type",
    "access_right": "access.status",
    "alternate.identifier": "metadata.identifiers.identifier",
    "alternate.scheme": "metadata.identifiers.scheme",
    "communities": "parent.communities.ids",
    "conceptdoi": "parent.id",
    "created": "created",
    "creators.affiliation": "metadata.creators.affiliations.name",
    "description": "metadata.description",
    "doi": "pids.doi.identifier",
    "embargodate": "access.embargo.until",
    "grants.code": "metadata.funding.award.number",
    "grants.title": "metadata.funding.award.title.en",
    "grants.funder.doi": "metadata.funding.funder.identifiers.identifier",
    "grants.funder.name": "metadata.funding.funder.name",
    "keywords": "metadata.subjects.subject",
    "language": "metadata.languages.id",
    "license.identifier": "metadata.rights.id",
    "license.url": "metadata.rights.props.url",
    "publicationdate": "metadata.publication_date",
    "publication_date": "metadata.publication_date",
    "recid": "id",
    "related.identifier": "metadata.related_identifiers.identifier",
    "related.scheme": "metadata.related_identifiers.scheme",
    "related.relation": "metadata.related_identifiers.relation_type.id",
    "title": "metadata.title",
    "type": "metadata.resource_type.props.type",
    "version": "versions.index",
    # journal custom field mappings
    "journal.title": "custom_fields.journal\:journal.title",
    "journal.pages": "custom_fields.journal\:journal.pages",
    "journal.volume": "custom_fields.journal\:journal.volume",
    "journal.issn": "custom_fields.journal\:journal.issn",
    # meeting custom field mappings
    "meeting.title": "custom_fields.meeting\:meeting.title",
    "meeting.acronym": "custom_fields.meeting\:meeting.acronym",
    "meeting.dates": "custom_fields.meeting\:meeting.dates",
    "meeting.place": "custom_fields.meeting\:meeting.place",
    "meeting.url": "custom_fields.meeting\:meeting.url",
    "meeting.session": "custom_fields.meeting\:meeting.session",
    "meeting.session_part": "custom_fields.meeting\:meeting.session_part",
    "part_of.title": "custom_fields.imprint\:imprint.title",
    "part_of.pages": "custom_fields.imprint\:imprint.pages",
    # imprint custom field mappings
    "imprint.isbn": "custom_fields.imprint\:imprint.isbn",
    "imprint.place": "custom_fields.imprint\:imprint.place",
    "imprint.publisher": "custom_fields.imprint\:imprint.publisher",
    # notes custom field mappings
    "notes": "metadata.additional_descriptions.description",
    # thesis custom field mappings
    "thesis.university": "custom_fields.thesis\:university"
}

RDM_SEARCH = {
    "facets": ["access_status", "resource_type", "subject"],
    "sort": ["bestmatch", "newest", "oldest", "version"],
    "query_parser_cls": QueryParser.factory(
        tree_transformer_factory=SearchFieldTransformer.factory(
            mapping=ZENODO_LEGACY_SEARCH_MAP
        ),
    ),
}

# Invenio-Accounts
# ================
# See https://github.com/inveniosoftware/invenio-accounts/blob/master/invenio_accounts/config.py

ACCOUNTS_LOCAL_LOGIN_ENABLED = True  # enable local login
SECURITY_REGISTERABLE = True  # local login: allow users to register
SECURITY_RECOVERABLE = True  # local login: allow users to reset the password
SECURITY_CHANGEABLE = True  # local login: allow users to change psw
SECURITY_CONFIRMABLE = True  # local login: users can confirm e-mail address
SECURITY_LOGIN_WITHOUT_CONFIRMATION = False # require users to confirm email before being able to login

# Invenio-OAuthclient
# ===================
_orcid_helper = ORCIDOAuthSettingsHelper(
    title="ORCID (Sandbox)",
    description="ORCID (Sandbox) - Connecting Research and Researchers.",
    base_url='https://pub.sandbox.orcid.org/',
    access_token_url='https://sandbox.orcid.org/oauth/token',
    authorize_url='https://sandbox.orcid.org/oauth/authorize#show_login',
)

OAUTHCLIENT_OPENAIRE_AAI_VERIFY_EXP = True
OAUTHCLIENT_OPENAIRE_AAI_VERIFY_AUD = True
OAUTHCLIENT_OPENAIRE_AAI_USER_INFO_FROM_ENDPOINT = True
OAUTHCLIENT_OPENAIRE_AAI_REALM_URL = 'https://beta.aai.openaire.eu/auth/realms/openaire'
OAUTHCLIENT_OPENAIRE_AAI_USER_INFO_URL = "https://beta.aai.openaire.eu/auth/realms/openaire/protocol/openid-connect/userinfo"


OAUTHCLIENT_REMOTE_APPS = {
    "orcid": _orcid_helper.remote_app,
    "github": github.REMOTE_APP,
    "openaire_aai": REMOTE_SANDBOX_APP,
}

# secrets will be injected on deployment
ORCID_APP_CREDENTIALS = {
    "consumer_key": "CHANGE ME",
    "consumer_secret": "CHANGE ME",
}
OPENAIRE_APP_CREDENTIALS = {
    "consumer_key": "CHANGE ME",
    "consumer_secret": "CHANGE ME",
}
GITHUB_APP_CREDENTIALS = {
    "consumer_key": "CHANGE ME",
    "consumer_secret": "CHANGE ME",
}

ACCOUNTS_LOGIN_VIEW_FUNCTION = auto_redirect_login  # autoredirect to external login if enabled
OAUTHCLIENT_AUTO_REDIRECT_TO_EXTERNAL_LOGIN = False  # autoredirect to external login

# Invenio-UserProfiles
# --------------------
USERPROFILES_READ_ONLY = False  #  allow users to change profile info (name, email, etc...)

THEME_SHOW_FRONTPAGE_INTRO_SECTION = False
APP_RDM_RECORD_LANDING_PAGE_TEMPLATE = "zenodo_rdm/records/detail.html"

# Invenio-Base
# ============
BLUEPRINTS_URL_PREFIXES = {
    # We want to override the legacy files endpoints with our own resource/service
    "invenio_files_rest": "/legacy-files",
}

# Custom Fields
# =============

RDM_NAMESPACES = NAMESPACES

RDM_CUSTOM_FIELDS = CUSTOM_FIELDS

RDM_CUSTOM_FIELDS_UI = CUSTOM_FIELDS_UI  #  UI components